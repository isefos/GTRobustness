graphgym:

  accelerator: auto
  out_dir: configs_seml/results
  metric_best: accuracy
  tensorboard_each_run: false
  seed: 42

  dataset:
    format: PyG-UPFD
    name: politifact-bert
    task: graph
    task_type: classification_binary
    transductive: false
    split_mode: standard
    node_encoder: true
    node_encoder_name: LinearNode+WeightedGraphormerBias
    node_encoder_bn: false

  posenc_GraphormerBias:
    enable: true
    num_spatial_types: 5
    num_in_degrees: 25
    num_out_degrees: 25
    node_degrees_only: false
    directed_graphs: false
    has_edge_attr: false

  train:
    mode: custom
    batch_size: 16
    eval_period: 1
    enable_ckpt: true
    ckpt_best: true

  model:
    type: Graphormer
    loss_fun: cross_entropy
    graph_pooling: graph_token

  graphormer:
    num_layers: 1
    num_heads: 1
    embed_dim: 8
    dropout: 0.0
    attention_dropout: 0.4
    mlp_dropout: 0.04
    input_dropout: 0.0

  gnn:
    head: graphormer_graph
    layers_pre_mp: 0
    layers_post_mp: 1
    dim_inner: 8  # `gnn.dim_inner` must match `gt.dim_hidden` / `graphormer.embed_dim`
  
  optim:
    base_lr: 0.003
    weight_decay: 0.0
    clip_grad_norm: true
    clip_grad_norm_value: 5.0
    optimizer: adamW
    max_epoch: 10
    scheduler: cosine_with_warmup
    num_warmup_epochs: 2
    early_stopping: true
    early_stopping_patience: 2
    early_stopping_delta_e: 0.03
    early_stopping_warmup: 2

  attack:
    enable: true
    load_best_model: false
    split: test
    prediction_level: graph
    only_return_avg: true
    remove_isolated_components: true
    is_undirected: true
    root_node_idx: 0
    node_injection:
      enable: true
      from_train: true
      from_val: true
      from_test: true
      allow_existing_graph_pert: false
      sample_only_connected: true
      include_root_nodes: false
      sample_only_trees: true
    transfer:
      enable: true
      perturbation_path: 'test_transfer/test_perturbations'
