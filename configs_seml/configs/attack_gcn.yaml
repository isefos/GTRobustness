seml:
  executable: main.py
  output_dir: configs_seml/logs
  project_root_dir: ../..
  conda_environment: gtr

slurm:
  experiments_per_job: 3
  sbatch_options:
    partition: gpu_limited
    gres: gpu:1       # num GPUs
    mem: 16G          # memory
    cpus-per-task: 1  # num cores
    time: 0-12:00     # max time, D-HH:MM

fixed:

  graphgym:

    accelerator: auto
    out_dir: configs_seml/results
    metric_best: accuracy
    tensorboard_each_run: false

    dataset:
      format: PyG-UPFD
      name: politifact-spacy
      task: graph
      task_type: classification_binary
      transductive: false
      split_mode: standard
      node_encoder: true
      node_encoder_name: LinearNode
      node_encoder_bn: false

    train:
      mode: custom
      batch_size: 16
      eval_period: 1
      enable_ckpt: true
      ckpt_best: true

    model:
      type: gnn
      loss_fun: cross_entropy

    gnn:
      layer_type: gcnconvweighted
      stage_type: stack
      batchnorm: true
      act: relu
      dropout: 0.0
      layers_pre_mp: 0
      layers_mp: 1
      layers_post_mp: 1
      dim_inner: 64  # `gnn.dim_inner` must match `gt.dim_hidden` / `graphormer.embed_dim`
      head: weighted_add_pool_graph
    
    optim:
      base_lr: 0.0003
      weight_decay: 0.0001
      clip_grad_norm: true
      clip_grad_norm_value: 5.0
      optimizer: adamW
      max_epoch: 150
      scheduler: cosine_with_warmup
      num_warmup_epochs: 20
      early_stopping: true
      early_stopping_patience: 30
      early_stopping_delta_e: 0.05
      early_stopping_warmup: 30

    attack:
      enable: true
      log_progress: false
      split: test
      num_attacked_graphs: 0  # 0 means attack all
      skip_incorrect_graph_classification: true
      run_random_baseline: true
      epochs: 125
      epochs_resampling: 100
      lr: 4_000
      block_size: 2_000
      e_budget: 0.1
      minimum_budget: 0
      eps: 1e-7
      is_undirected: true
      loss: train
      metric: null
      max_final_samples: 20
      max_trials_sampling: 20
      with_early_stopping: true
      enable_node_injection: true
      node_injection_from_train: true
      node_injection_from_val: true
      node_injection_from_test: true
      remove_isolated_components: true
      root_node_idx: 0
      include_root_nodes_for_injection: false
      existing_node_prob_multiplier: 1  # 1_000
      sample_only_connected: true
      sample_only_trees: true
      allow_existing_graph_pert: false

# experiment random configs

random:
  samples: 3
  seed: 187

  graphgym.seed:
    seed: 786
    type: randint
    min: 0
    max: 10000