seml:
  executable: main.py
  output_dir: configs_seml/logs
  project_root_dir: ../..
  conda_environment: gtr

slurm:
  experiments_per_job: 8
  sbatch_options:
    partition: gpu_limited
    gres: gpu:1       # num GPUs
    mem: 32G          # memory
    cpus-per-task: 4  # num cores
    time: 1-00:00     # max time, D-HH:MM

# hyperparameter search

random:
  samples: 100
  seed: 187

  graphgym.seed:
    seed: 786
    type: randint
    min: 0
    max: 10000

  graphgym.optim.base_lr:
    seed: 2264
    type: loguniform
    min: 4.0e-4
    max: 1.0e-2

  graphgym.gnn.layers_mp:
    seed: 357
    type: randint
    min: 2
    max: 10

  dims_per_head:
    seed: 13094
    type: randint
    min: 4
    max: 20

  graphgym.gnn.att_heads:
    seed: 865
    type: randint
    min: 2
    max: 9


# experiment fixed configs 

fixed:

  graphgym:

    accelerator: cuda
    out_dir: configs_seml/results
    metric_best: accuracy-SBM
    metric_agg: argmax
    tensorboard_each_run: false

    dataset:
      format: PyG-GNNBenchmarkDataset
      name: CLUSTER
      task: graph
      task_type: classification
      transductive: false
      split_mode: standard
      node_encoder: true
      node_encoder_name: LinearNode
      node_encoder_bn: false
      edge_encoder: false

    train:
      mode: custom
      batch_size: 16
      eval_period: 1

    model:
      type: gnn
      loss_fun: weighted_cross_entropy

    gnn:
      layer_type: gatconvweighted
      stage_type: skipsum
      head: inductive_node
      act: relu
      agg: add
      dropout: 0.0
      layers_pre_mp: 0
      layers_post_mp: 3
      batchnorm: true
      normalize_adj: false
      dim_inner: 0  # set by dims_per_head

    optim:
      clip_grad_norm: true
      clip_grad_norm_value: 5.0
      optimizer: adamW
      weight_decay: 0.0
      max_epoch: 100
      scheduler: cosine_with_warmup
      num_warmup_epochs: 5
      early_stopping: true
      early_stopping_patience: 30
      early_stopping_delta_e: 0.02
      early_stopping_warmup: 30

    attack:
      enable: false
