seml:
  executable: main.py
  output_dir: configs_seml/logs
  project_root_dir: ../../../..
  conda_environment: gtr

slurm:
  experiments_per_job: 10
  sbatch_options:
    partition: gpu_gtx1080
    gres: gpu:1       # num GPUs
    mem: 32G          # memory
    cpus-per-task: 2  # num cores
    time: 1-00:00     # max time, D-HH:MM
    qos: deadline

# experiment random configs
  
random:
  samples: 30
  seed: 153

  graphgym.seed:
    seed: 4553
    type: randint
    min: 0
    max: 10000

  graphgym.optim.base_lr:
    seed: 264
    type: loguniform
    min: 1e-5
    max: 1e-2

  graphgym.optim.weight_decay:
    seed: 809
    type: loguniform
    min: 5e-7
    max: 1e-1

  dims_per_head:
    seed: 304
    type: randint
    min: 5
    max: 11

  graphgym.gnn.dropout:
    seed: 6233
    type: uniform
    min: 0.0
    max: 0.15

  graphgym.gnn.layers_mp:
    seed: 3672
    type: randint
    min: 5
    max: 16

  graphgym.gt.layers:
    seed: 357
    type: randint
    min: 2
    max: 5

  graphgym.gt.dropout:
    seed: 961
    type: uniform
    min: 0.0
    max: 0.1
  
  graphgym.gnn.layers_post_mp:
    seed: 966
    type: choice
    options:
      - 1
      - 3

# experiment fixed configs 

fixed:

  graphgym:

    accelerator: cuda
    out_dir: configs_seml/results
    metric_best: accuracy
    metric_agg: argmax
    tensorboard_each_run: false

    dataset:
      format: PyG-TUDataset
      name: ENZYMES
      task: graph
      task_type: classification
      transductive: false
      split_mode: cv-stratifiedkfold-10
      split_index: 0
      node_encoder: true
      node_encoder_name: LinearNode
      node_encoder_bn: false
      edge_encoder: false

    train:
      mode: custom
      batch_size: 32
      eval_period: 1

    model:
      type: WeightedPolynormer
      loss_fun: cross_entropy

    gt:
      n_heads: 8
      dim_hidden: 0  # determined using num_heads and dims_per_head
      polynormer:
        dropout_node_input: 0.0
        local_pre_layer_norm: false
        beta: -1.0
        qk_shared: true

    gnn:
      head: weighted_add_pool_graph
      layers_pre_mp: 0
      dim_inner: 0  # determined using num_heads and dims_per_head
      att_heads: 8

    optim:
      optimizer: adamW
      max_epoch: 500
      scheduler: reduce_on_plateau
      reduce_factor: 0.5
      schedule_patience: 10
      min_lr: 1.0e-5
      early_stopping: true
      early_stopping_patience: 50
      early_stopping_delta_e: 0.02
      early_stopping_warmup: 50
      clip_grad_norm: false
      
    attack:
      enable: false
