out_dir: tests/results
metric_best: accuracy
tensorboard_each_run: True
dataset:
  format: PyG-UPFD
  name: politifact-spacy
  task: graph
  task_type: classification_binary
  transductive: False
  split_mode: standard
  node_encoder: True
  node_encoder_name: WeightedGraphormerBias
  node_encoder_bn: True
posenc_GraphormerBias:
  enable: True
  node_degrees_only: False
  num_spatial_types: 16
  num_in_degrees: 32
  num_out_degrees: 32
  directed_graphs: False
  has_edge_attr: False
  combinations_degree: False
  use_weighted_path_distance: False
train:
  mode: custom
  batch_size: 16
  eval_period: 1
  ckpt_period: 100
model:
  type: Graphormer
  loss_fun: cross_entropy
  graph_pooling: graph_token
graphormer:
  num_layers: 2
  num_heads: 2
  embed_dim: 32
  dropout: 0.0
  attention_dropout: 0.0  # 0.1
  mlp_dropout: 0.0  # 0.1
  input_dropout: 0.0  # 0.1
gnn:
  head: graphormer_graph
  layers_pre_mp: 1
  layers_post_mp: 1  # Not used when `gnn.head: san_graph`
  dim_inner: 32  # `gt.dim_hidden` must match `gnn.dim_inner`
  batchnorm: True
  act: relu
  dropout: 0.0
  agg: mean
  normalize_adj: False
optim:
  clip_grad_norm: True
  clip_grad_norm_value: 5.0
  optimizer: adamW
  weight_decay: 0.01
  base_lr: 0.001
  max_epoch: 56
  scheduler: polynomial_with_warmup
attack:
  enable: True
  split: test
  num_attacked_graphs: 0  # 0 means attack all
  lr: 4_000
  block_size: 2_000
  e_budget: 0.1
  is_undirected: True
  loss: train
  enable_node_injection: True
  node_injection_from_train: True
  node_injection_from_val: True
  node_injection_from_test: True
  existing_node_prob_multiplier: 1_000
  allow_existing_graph_pert: False
  remove_isolated_components: True
  root_node_idx: 0
  include_root_nodes_for_injection: False
